name: Pull Request Actions

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fmt
        run: cargo fmt --all --verbose --check

  clippy:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - name: Install clippy
        run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test:
    needs: [build, clippy, fmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        run: cargo test --all --verbose

  build-platforms:
    if: github.event_name == 'push'
    strategy:
      matrix:
        features:
          - name: all
            options: '--all-features'
          - name: with cache redis
            options: '--features enable-cacher-redis'
          - name: with semantic
            options: '--features enable-semantic'

    runs-on: ubuntu-latest
    permissions: write-all
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Build with feature ${{ matrix.features.name }}
        run: cargo build --release --bins ${{ matrix.features.options }}
