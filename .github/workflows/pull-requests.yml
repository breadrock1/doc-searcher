name: Pull Request Actions

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fmt
        run: cargo fmt --all --verbose --check

  clippy:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - name: Install clippy
        run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test:
    needs: [build, clippy, fmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test
        run: cargo test --all --verbose

  build-platforms:
    if: github.event_name == 'push'
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    permissions: write-all
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.platform.target }}
      - name: Add rustup target ${{ matrix.platform.target }}
        run: rustup target add ${{ matrix.platform.target }}
      - name: Build app for ${{matrix.platform.target }}
        run: cargo build --release --target ${{ matrix.platform.target }}
